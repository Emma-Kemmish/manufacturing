# Maintainer: Jacob Alexander <haata@kiibohd.com>
# Manufacturing PKGBUILD. Not intended to be submitted to AUR
pkgname=kiibohd-manufacturing
pkgrel=1
pkgdesc="Has all the necessary tools to use machine as a Kiibohd Firmware Flashing Station. Used in manufacturing."
url="http://kiibohd.com"
arch=('any')
pkgver=r3.0bf2365
license=("GPL3")
depends=('ruby' 'libusb' 'dfu-util' 'git' 'lsof')
optdepends=('namcap' 'pacgem' 'ruby-serialport' 'ruby-ffi' 'ruby-libusb')
install=$pkgname.install

source=("programmer::git+https://github.com/kiibohd/programmer.git")

md5sums=('SKIP')

makedepends=('python' 'arm-none-eabi-binutils' 'arm-none-eabi-gcc' 'arm-none-eabi-newlib' 'cmake' 'git' 'dfu-util' 'ctags' 'ruby')
buildtargets=('IC60')

pkgver() {
	printf "r%s.%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"
}

build() {
	# These are microcontroller binaries, CFLAGS and CXXFLAGS do not apply
	unset CFLAGS
	unset CXXFLAGS

	# Generate firmware for each of the buildtargets
	for target in "${buildtargets[@]}"; do
		echo "Generating '$target'"
		../../${target}/generate.bash || return 1

		# Remove temp files
		rm -r ../../${target}/{bootloader,firmware}
	done
}

package() {
	# Install udev rules
	mkdir -p $pkgdir/etc/udev/rules.d || return 1
	cp ../*.rules $pkgdir/etc/udev/rules.d || return 1

	# Install buspirate ruby api for flashing
	mkdir -p $pkgdir/usr/local/kiibohd || return 1
	cp -r programmer $pkgdir/usr/local/kiibohd/. || return 1

	# Install gem generator script
	cp ../gemgen.bash $pkgdir/usr/local/kiibohd/. || return 1

	# Install base manufacturing scripts
	cp ../../*.bash $pkgdir/usr/local/kiibohd/. || return 1

	# Install scripts and firmware binaries for each buildtarget
	mkdir -p $pkgdir/usr/local/bin || return 1
	for target in "${buildtargets[@]}"; do
		cp -r ../../$target $pkgdir/usr/local/kiibohd/. || return 1
		ln -fs /usr/local/kiibohd/${target}/flash.bash $pkgdir/usr/local/bin/${target}.flash || return 1
	done
}

